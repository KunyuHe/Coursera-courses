reverse = TRUE
)
)
print(paste(
"overall significance of ", variables[i], " is : ",
round(
pchisq(
deviance(m_sig) - deviance(ppom2),
df = df.residual(m_sig) - df.residual(ppom2),
lower.tail = FALSE
),
digits = 4
),
sep = ""
),
quote = FALSE)
}
Anova(pom2)
summary(ppom2)
setwd("D:/我的文档/Multigenerational Effects")
load('[CFPS]all.RData')
.libPaths("D:/R/win-library/3.4")
library(MASS)
library(plyr)
library(car)
library(VGAM)
library(rcompanion)
library(brant)
library(dplyr)
all <- all %>%
mutate(pgf_co = ifelse(pgf_co == "no" | pgf_co == "deceased", "no", "yes"),
mgf_co = ifelse(mgf_co == "no" | mgf_co == "deceased", "no", "yes"),
asset = ifelse(asset_per == "< 25%", "< 25%",
ifelse(asset_per == "25% - 50%" | asset_per == "50% - 75%", "25% - 75%",
"> 75%")),
income = ifelse(income_per == "< 25%", "< 25%",
ifelse(income_per == "25% - 50%" | income_per == "50% - 75%", "25% - 75%",
"> 75%")),
asset = factor(asset, levels = c("< 25%", "25% - 75%", "> 75%")),
income = factor(income, levels = c("< 25%", "25% - 75%", "> 75%")))
f1 <- sch_pacing ~ bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu
pom1 <-
vglm(
formula = f1,
data = all,
family = cumulative(
parallel = TRUE,
reverse = TRUE,
link = "logit"
)
)
pom1 <- polr(formula = f1, data = all,Hess = TRUE)
brant(pom1, by.var = TRUE)
f2 <- FALSE ~  1 + urban + month + kindergarten + ethnicity.area
ppom1 <-
vglm(
formula = f1,
data = all,
family = cumulative(
parallel = f2,
reverse = TRUE
)
)
variables <- c('bodymass', 'gender', 'ethnicity', 'hukou', 'kindergarten', 'urban', 'month', 'siblings', 'primary.area', 'ethnicity.area','pgf_edu', 'mgf_edu')
f_ppom <-
c(
sch_pacing ~ gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + gender + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + gender + ethnicity + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + gender + ethnicity + hukou + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + gender + ethnicity + hukou + kindergarten + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + gender + ethnicity + hukou + kindergarten + urban + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + gender + ethnicity + hukou + kindergarten + urban + month + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + pgf_edu + mgf_edu,
sch_pacing ~ bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + mgf_edu,
sch_pacing ~ bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu
)
f_ppo <-
c(
f2,
f2,
f2,
f2,
FALSE ~  1 + urban + month + ethnicity.area,
FALSE ~  1 + month + kindergarten + ethnicity.area,
FALSE ~  1 + urban + kindergarten + ethnicity.area,
f2,
f2,
FALSE ~  1 + urban + month + kindergarten,
f2,
f2
)
count <- c(1:12)
for (i in count) {
m_sig <-
vglm(
formula = f_ppom[[i]],
data = all,
family = cumulative(
parallel = f_ppo[[i]],
reverse = TRUE
)
)
print(paste(
"overall significance of ", variables[i], " is : ",
round(
pchisq(
deviance(m_sig) - deviance(ppom1),
df = df.residual(m_sig) - df.residual(ppom1),
lower.tail = FALSE
),
digits = 4
),
sep = ""
),
quote = FALSE)
}
Anova(pom1)
summary(ppom1)
null <- vglm(formula = sch_pacing ~ 1,
data = all,
family = cumulative(
parallel = TRUE,
reverse = TRUE))
nagelkerke(fit = ppom1, null = null)
pom1 <-
vglm(
formula = f1,
data = all,
family = cumulative(
parallel = TRUE,
reverse = TRUE,
link = "logit"
)
)
nagelkerke(fit = pom1, null = null)
f3 <- sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu
pom2 <-
vglm(
formula = f3,
data = all,
family = cumulative(
parallel = TRUE,
reverse = TRUE,
link = "logit"
)
)
pom2 <- polr(formula = f3, data = all,Hess = TRUE)
brant(pom2, by.var = TRUE)
f4 = FALSE ~ 1 + month + kindergarten + f_party
ppom2 <-
vglm(formula = f3,
data = all,
family = cumulative(parallel = f4,
reverse = TRUE)
)
variables <- c('f_edu', 'f_party', 'm_edu', 'asset', 'income', 'bodymass', 'gender', 'ethnicity', 'hukou', 'kindergarten', 'urban', 'month', 'siblings', 'primary.area', 'ethnicity.area','pgf_edu', 'mgf_edu')
f_ppom <-
c(
sch_pacing ~ f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu)
f_ppo <-
c(
f4,
FALSE ~ 1 + month + kindergarten,
f4,
f4,
f4,
f4,
f4,
f4,
f4,
FALSE ~ 1 + month + f_party,
f4,
FALSE ~ 1 + kindergarten + f_party,
f4,
f4,
f4,
f4,
f4
)
count <- c(1:17)
for (i in count) {
m_sig <-
vglm(
formula = f_ppom[[i]],
data = all,
family = cumulative(
parallel = f_ppo[[i]],
reverse = TRUE
)
)
print(paste(
"overall significance of ", variables[i], " is : ",
round(
pchisq(
deviance(m_sig) - deviance(ppom2),
df = df.residual(m_sig) - df.residual(ppom2),
lower.tail = FALSE
),
digits = 4
),
sep = ""
),
quote = FALSE)
}
Anova(pom2)
summary(ppom2)
nagelkerke(fit = ppom2, null = null)
f4 = FALSE ~ 1 + month + kindergarten + f_party
ppom2 <-
vglm(formula = f3,
data = all,
family = cumulative(parallel = f4,
reverse = TRUE)
)
variables <- c('f_edu', 'f_party', 'm_edu', 'asset', 'income', 'bodymass', 'gender', 'ethnicity', 'hukou', 'kindergarten', 'urban', 'month', 'siblings', 'primary.area', 'ethnicity.area','pgf_edu', 'mgf_edu')
f_ppom <-
c(
sch_pacing ~ f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + primary.area + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + ethnicity.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + pgf_edu + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + mgf_edu,
sch_pacing ~ f_edu + f_party + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu)
f_ppo <-
c(
f4,
FALSE ~ 1 + month + kindergarten,
f4,
f4,
f4,
f4,
f4,
f4,
f4,
FALSE ~ 1 + month + f_party,
f4,
FALSE ~ 1 + kindergarten + f_party,
f4,
f4,
f4,
f4,
f4
)
count <- c(1:17)
for (i in count) {
m_sig <-
vglm(
formula = f_ppom[[i]],
data = all,
family = cumulative(
parallel = f_ppo[[i]],
reverse = TRUE
)
)
print(paste(
"overall significance of ", variables[i], " is : ",
round(
pchisq(
deviance(m_sig) - deviance(ppom2),
df = df.residual(m_sig) - df.residual(ppom2),
lower.tail = FALSE
),
digits = 4
),
sep = ""
),
quote = FALSE)
}
m_sig <-
vglm(
formula = sch_pacing ~ f_edu + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu
family = cumulative(
m_sig <-
vglm(
formula = sch_pacing ~ f_edu + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
family = cumulative(
parallel = FALSE ~ 1 + month + kindergarten,
reverse = TRUE
))
m_sig <-
vglm(
formula = sch_pacing ~ f_edu + m_edu + asset + income + bodymass + gender + ethnicity + hukou + kindergarten + urban + month + siblings + primary.area + ethnicity.area + pgf_edu + mgf_edu,
data = all,
family = cumulative(
parallel = FALSE ~ 1 + month + kindergarten,
reverse = TRUE
))
pchisq(
deviance(m_sig) - deviance(ppom2),
df = df.residual(m_sig) - df.residual(ppom2),
lower.tail = FALSE
)
f4 = FALSE ~ 1 + month + kindergarten + urban + asset
ppom2 <-
vglm(formula = f3,
data = all,
family = cumulative(parallel = f4,
reverse = TRUE)
)
setwd("D:/我的文档/Multigenerational Effects")
load('[CFPS]all.RData')
library(MASS)
library(plyr)
library(car)
library(VGAM)
library(rcompanion)
library(brant)
library(dplyr)
all <- all %>%
mutate(pgf_co = ifelse(pgf_co == "no" | pgf_co == "deceased", "no", "yes"),
mgf_co = ifelse(mgf_co == "no" | mgf_co == "deceased", "no", "yes"),
asset = ifelse(asset_per == "< 25%", "< 25%",
ifelse(asset_per == "25% - 50%" | asset_per == "50% - 75%", "25% - 75%",
"> 75%")),
income = ifelse(income_per == "< 25%", "< 25%",
ifelse(income_per == "25% - 50%" | income_per == "50% - 75%", "25% - 75%",
"> 75%")),
asset = factor(asset, levels = c("< 25%", "25% - 75%", "> 75%")),
income = factor(income, levels = c("< 25%", "25% - 75%", "> 75%")))
View(all)
setwd("D:/我的文档/Multigenerational Effects")
load("CFPS2010_Child.RData")
load("CFPS2010_Adult.RData")
load("CFPS2010_Fam.RData")
33600+8990
load("CFPS2010_Child.RData")
load("CFPS2010_Adult.RData")
load("CFPS2010_Fam.RData")
a <- filter(CFPS2010_Adult, subsample == 1)
a <- CFPS2010_Adult %>%
filter(subsample == 1)
library(dplyr)
a <- CFPS2010_Adult %>%
filter(subsample == 1)
library(dplyr)
a <- CFPS2010_Adult %>%
filter(subsample == 1)
a <- CFPS2010_Child %>%
filter(subsample == 1)
a <- CFPS2010_Fam %>%
filter(subsample == 1)
library(dplyr)
a <- CFPS2010_Adult %>%
filter(subsample == 1)
b <- CFPS2010_Child %>%
filter(subsample == 1)
c <- CFPS2010_Fam %>%
filter(subsample == 1)
length(a$pid) + length(b$pid)
install.packages('caTools')
install.packages('caTools')
install.packages('caTools')
library(rcompanion)
install.packages(brant)
install.packages('brant')
install.packages('brant')
install.packages('swirl')
library(swirl)
swirl()
bye()
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
download.file(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv, "dataset.csv", method="curl")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "dataset.csv", method="curl")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "dataset.csv", method="curl")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", method="curl")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./data/dataset.csv", method="curl")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "./data/dataset.csv", method="curl")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "./data/dataset.csv", method="curl")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
if(!file.exists("data")){dir.create("data")}
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "./data/dataset.csv", method="curl")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
if(!file.exists("data")){dir.create("data")}
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "./data/dataset.csv")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "dataset.csv")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "dataset.csv")
data <- read.csv("dataset.csv")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
if(!file.exists("dataset.csv")){
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "dataset.csv")
}
data <- read.csv("dataset.csv")
setwd("D:/我的文档/Coursera/Data Science/Getting and Cleaning Data/Quiz3")
if(!file.exists("dataset.csv")){
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile = "dataset.csv")
}
data <- read.csv("dataset.csv")
library(plyr)
agricultureLogical <- ifelse(data$ACR = 3 & data$AGS = 6, TRUE, FALSE)
library(plyr)
agricultureLogical <- ifelse(data$ACR == 3 & data$AGS == 6, TRUE, FALSE)
which(agricultureLogical)
install.packages("jpeg")
if(!file.exists('data.jpg')){
fileurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg'
download.file(fileurl, 'data.jpg')
}
data2 = readJPEG(dst2, native = TRUE)
library(jpeg)
data2 = readJPEG(dst2, native = TRUE)
quantile(data2, probs = c(0.3, 0.8))
data = readJPEG('data.jpg', native = TRUE)
quantile(data, probs = c(0.3, 0.8))
# Q2
if(!file.exists('data.jpg')){
fileurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg'
download.file(fileurl, 'data.jpg', method = "curl")
}
fileurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg'
download.file(fileurl, 'data.jpg', method = "curl")
fileurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg'
download.file(fileurl, 'data.jpg', mode = 'wb', method = 'curl')
fileurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg'
download.file(fileurl, 'data.jpg', mode = 'wb')
library(jpeg)
data = readJPEG('data.jpg')
quantile(data, probs = c(0.3, 0.8))
if(!file.exists('data.jpg')){
fileurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg'
download.file(fileurl, 'data.jpg', mode = 'wb')
}
library(jpeg)
data = readJPEG('data.jpg')
quantile(data, probs = c(0.3, 0.8))
if(!file.exists('data2.csv')){
fileurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv'
download.file(fileurl, 'data2.csv')
}
if(!file.exists('data3.csv')){
fileurl = 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv'
download.file(fileurl, 'data3.csv')
}
gdp = fread(data2, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
edu = fread(data3)
install.packages('data.table')
library(data.table)
gdp = fread(data2, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
edu = fread(data3)
merge = merge(gdp, edu, by = 'CountryCode')
nrow(merge)
library(data.table)
data2 <- read.csv("data2.csv")
data3 <- read.csv("data3.csv")
gdp = fread(data2, skip=4, nrows = 190, select = c(1, 2, 4, 5), col.names=c("CountryCode", "Rank", "Economy", "Total"))
edu = fread(data3)
merge = merge(gdp, edu, by = 'CountryCode')
nrow(merge)
merge = merge(data2, data3, by = 'CountryCode')
nrow(merge)
View(data2)
View(data3)
data2 <- read.csv("data2.csv")
data3 <- read.csv("data3.csv")
View(data3)
View(data2)
View(data3)
View(data2)
View(data2)
library(dplyr)
data3 <- rename(data3, CountryCode = X)
merge = merge(data2, data3, by = 'CountryCode')
nrow(merge)
View(data2)
View(data3)
data2 <- rename(data2, CountryCode = X)
merge = merge(data2, data3, by = 'CountryCode')
nrow(merge)
